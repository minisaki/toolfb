# Form implementation generated from reading ui file 'AccountManagerGui.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QDialog, QTableWidgetItem, QMessageBox
from PyQt6.QtCore import Qt
from Account.AddAccountUi import Ui_Dialog_Add_Account


class Ui_Dialog_fb(object):
    # def __init__(self, database):
    #     super(Ui_Dialog_fb, self).__init__()
    #     self.database = database

    def setupUi(self, Dialog_fb):
        Dialog_fb.setObjectName("Dialog_fb")
        Dialog_fb.resize(600, 400)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog_fb)
        self.verticalLayout.setObjectName("verticalLayout")

        self.horizontalLayout_1 = QtWidgets.QHBoxLayout()
        self.lineEdit_search_fb = QtWidgets.QLineEdit(Dialog_fb)
        self.lineEdit_search_fb.setObjectName("lineEdit_search_fb")
        self.pushButton_search = QtWidgets.QPushButton(Dialog_fb)
        self.pushButton_search.setObjectName("pushButton_search")
        self.pushButton_search.setText("Tìm")

        # self.pushButton_search.clicked.connect(self.search_list_fb)
        self.horizontalLayout_1.addWidget(self.lineEdit_search_fb)
        self.horizontalLayout_1.addWidget(self.pushButton_search)

        self.verticalLayout.addLayout(self.horizontalLayout_1)

        # self.lineEdit_search_fb.returnPressed.connect(self.pushButton_search.click)
        # self.verticalLayout.addWidget(self.lineEdit_search_fb)
        self.tableWidget_fb = QtWidgets.QTableWidget(Dialog_fb)
        self.tableWidget_fb.setStyleSheet("QTableWidget {\n"
"    background-color: rgb(238, 238, 236);\n"
"}")
        self.tableWidget_fb.setObjectName("tableWidget_fb")
        self.tableWidget_fb.setColumnCount(6)
        self.tableWidget_fb.setRowCount(0)

        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_fb.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_fb.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_fb.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_fb.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_fb.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_fb.setHorizontalHeaderItem(5, item)

        self.tableWidget_fb.horizontalHeader().setDefaultSectionSize(120)

        self.verticalLayout.addWidget(self.tableWidget_fb)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_reset = QtWidgets.QPushButton(Dialog_fb)
        self.pushButton_reset.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_reset.setObjectName("pushButton_reset")

        # self.pushButton_reset.clicked.connect(self.render_list_fb)
        self.horizontalLayout.addWidget(self.pushButton_reset)
        self.pushButton_add_fb = QtWidgets.QPushButton(Dialog_fb)
        self.pushButton_add_fb.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_add_fb.setObjectName("pushButton_add_fb")

        # self.pushButton_add_fb.clicked.connect(self.show_dialog)
        self.horizontalLayout.addWidget(self.pushButton_add_fb)
        self.pushButton_edit_fb = QtWidgets.QPushButton(Dialog_fb)
        self.pushButton_edit_fb.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_edit_fb.setObjectName("pushButton_edit_fb")

        # self.pushButton_edit_fb.clicked.connect(self.show_dialog_edit)
        self.horizontalLayout.addWidget(self.pushButton_edit_fb)
        self.pushButton_delete_fb = QtWidgets.QPushButton(Dialog_fb)
        self.pushButton_delete_fb.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_delete_fb.setObjectName("pushButton_delete_fb")

        # self.pushButton_delete_fb.clicked.connect(self.delete_list_fb)
        self.horizontalLayout.addWidget(self.pushButton_delete_fb)
        self.verticalLayout.addLayout(self.horizontalLayout)

        # self.render_list_fb()
        self.retranslateUi(Dialog_fb)
        QtCore.QMetaObject.connectSlotsByName(Dialog_fb)

    def retranslateUi(self, Dialog_fb):
        _translate = QtCore.QCoreApplication.translate
        Dialog_fb.setWindowTitle(_translate("Dialog_fb", "Quản lý tài khoản facebook"))
        self.lineEdit_search_fb.setPlaceholderText(_translate("Dialog_fb", "Tìm kiếm tài khoản facebbok theo UID"))
        self.pushButton_reset.setText(_translate("Dialog_fb", "Lấy danh sách"))
        self.pushButton_add_fb.setText(_translate("Dialog_fb", "Thêm"))
        self.pushButton_edit_fb.setText(_translate("Dialog_fb", "Sửa"))
        self.pushButton_delete_fb.setText(_translate("Dialog_fb", "Xóa"))

        item = self.tableWidget_fb.horizontalHeaderItem(0)
        item.setText(_translate("Dialog_fb", "UID"))
        item = self.tableWidget_fb.horizontalHeaderItem(1)
        item.setText(_translate("Dialog_fb", "Name"))
        item = self.tableWidget_fb.horizontalHeaderItem(2)
        item.setText(_translate("Dialog_fb", "Cookie"))
        item = self.tableWidget_fb.horizontalHeaderItem(3)
        item.setText(_translate("Dialog_fb", "Profile"))
        item = self.tableWidget_fb.horizontalHeaderItem(4)
        item.setText(_translate("Dialog_fb", "PassWord"))
        item = self.tableWidget_fb.horizontalHeaderItem(5)
        item.setText(_translate("Dialog", "isAvail"))

    # def show_dialog(self):
    #     dialog = QDialog()
    #     ui = Ui_Dialog_Add_Account(self.database)
    #     ui.setupUi(dialog)
    #     dialog.exec()
    #
    # def show_dialog_edit(self):
    #     data = self.event_select()
    #     if data:
    #         dialog = QDialog()
    #         ui = Ui_Dialog_Add_Account(self.database, data=data)
    #         ui.setupUi(dialog)
    #         dialog.exec()
    #     else:
    #         QMessageBox.warning(self, "Thông báo", "Vui lòng chọn 1 tài khoản để sửa")
    #
    # def render_list(self, data):
    #     self.tableWidget_fb.setRowCount(0)
    #     for fb in data:
    #         rows = self.tableWidget_fb.rowCount()
    #         self.tableWidget_fb.setRowCount(rows + 1)
    #         item = QTableWidgetItem(str(fb[0]))
    #         item.setFlags(Qt.ItemFlag.ItemIsUserCheckable | Qt.ItemFlag.ItemIsEnabled)
    #         item.setCheckState(Qt.CheckState.Unchecked)
    #         self.tableWidget_fb.setItem(rows, 0, item)
    #         for idx, item in enumerate(fb):
    #             if idx > 0:
    #                 self.tableWidget_fb.setItem(rows, idx, QTableWidgetItem(str(item)))
    #
    # def render_list_fb(self):
    #     data = self.database.get_list_fb(table_name='account_fb')
    #     if data['check']:
    #         self.render_list(data=data['data'])
    #             # self.tableWidget_fb.resizeColumnsToContents()
    #     else:
    #         print(data['message'])
    #
    # def search_list_fb(self):
    #     uid = self.lineEdit_search_fb.text()
    #     data = self.database.search_fb(table_name='account_fb', uid=uid)
    #
    #     if data['check']:
    #         self.render_list(data['data'])
    #     else:
    #         print(data['message'])
    #
    # def event_select(self):
    #     rows = self.tableWidget_fb.rowCount()
    #     for row in range(rows):
    #         if self.tableWidget_fb.item(row, 0).checkState() == Qt.CheckState.Checked:
    #             return [self.tableWidget_fb.item(row, 0).text(),
    #                     self.tableWidget_fb.item(row, 1).text(),
    #                     self.tableWidget_fb.item(row, 2).text(),
    #                     self.tableWidget_fb.item(row, 3).text(),
    #                     self.tableWidget_fb.item(row, 4).text(),
    #                     self.tableWidget_fb.item(row, 5).text()]
    #
    #     return None
    #
    # def delete_list_fb(self):
    #     rows = self.tableWidget_fb.rowCount()
    #     for row in range(rows):
    #         if self.tableWidget_fb.item(row, 0).checkState() == Qt.CheckState.Checked:
    #             result = self.database.delete_table_fb(uid=self.tableWidget_fb.item(row, 0).text())
    #             if not result:
    #                 QMessageBox.critical(self, 'Xóa tài khoản', 'Xóa tài khoản không thành công')
    #
    #     self.render_list_fb()






# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     Dialog_fb = QtWidgets.QDialog()
#     ui = Ui_Dialog_fb()
#     ui.setupUi(Dialog_fb)
#     Dialog_fb.show()
#     sys.exit(app.exec())
